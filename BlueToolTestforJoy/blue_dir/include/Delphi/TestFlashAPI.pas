{ TestFlashAPI.pas : Declares the DLL functions for Delpi. }
{ Generated by C:\work_bluesuite_2_5\p4\common\hosttools\bluesuite_2_5\prodtest\scripts\extract_tt_api.pl from TestFlash.h; TestPS.h;  at 03/02/14 - 11:39:57 }

unit TestFlashAPI;

interface

function flInit( port: Integer;  xtal: Integer;  delays: Integer;  transport: Integer): Integer; stdcall; external 'TestFlash.dll' ;
function flInitSpiUnlock( port: Integer;  xtal: Integer;  delays: Integer;  transport: Integer;  unlockKey: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flmOpen( deviceMask: Cardinal;  xtal: Integer;  transport: Integer): Integer; stdcall; external 'TestFlash.dll' ;
function flmOpenSpiUnlock( deviceMask: Cardinal;  xtal: Integer;  transport: Integer;  unlockKey: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flInitTrans( trans: PChar;  xtal: Integer;  delays: Integer): Integer; stdcall; external 'TestFlash.dll' ;
function flInitSpiUnlockTrans( trans: PChar;  xtal: Integer;  delays: Integer;  unlockKey: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flmOpenTrans( deviceMask: Cardinal;  trans: PChar;  xtal: Integer): Integer; stdcall; external 'TestFlash.dll' ;
function flmOpenSpiUnlockTrans( deviceMask: Cardinal;  trans: PChar;  xtal: Integer;  unlockKey: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flReadProgramFiles( filename: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flmReadProgramFiles( filename: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flProgramBlock(): Integer; stdcall; external 'TestFlash.dll' ;
function flmProgramBlock( deviceMask: Cardinal;  eraseFirst: Byte;  verifyAfter: Byte;  restartAfter: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flErase(): Integer; stdcall; external 'TestFlash.dll' ;
function flmEraseBlock( deviceMask: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flmEraseSpawn( deviceMask: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flGangProgramBlock( deviceMask: Word;  eraseFirst: Byte;  restartAfter: Byte;  skipUnused: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flGetDetectedDevices(): Word; stdcall; external 'TestFlash.dll' ;
function flGetBitErrorField(): Word; stdcall; external 'TestFlash.dll' ;
function flmGetBitErrorField(): Cardinal; stdcall; external 'TestFlash.dll' ;
function flProgramSpawn(): Integer; stdcall; external 'TestFlash.dll' ;
function flmProgramSpawn( deviceMask: Cardinal;  eraseFirst: Byte;  verifyAfter: Byte;  restartAfter: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flGangProgramSpawn( deviceMask: Word;  eraseFirst: Byte;  restartAfter: Byte;  skipUnused: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flGetProgress(): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetDeviceProgress( device: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flGetLastError(): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetLastError(): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetDeviceError( device: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flResetAndStart(): Integer; stdcall; external 'TestFlash.dll' ;
function flmResetAndStart( deviceMask: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
procedure flClose(); stdcall; external 'TestFlash.dll' ;
procedure flmClose( deviceMask: Cardinal); stdcall; external 'TestFlash.dll' ;
function flGetVersion( versionStr: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetVersion( versionStr: PChar): Integer; stdcall; external 'TestFlash.dll' ;
function flStopProcessor(): Integer; stdcall; external 'TestFlash.dll' ;
function flmStopProcessor( deviceMask: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flGetDownloadTime(): Cardinal; stdcall; external 'TestFlash.dll' ;
function flmGetDeviceDownloadTime( device: Cardinal): Cardinal; stdcall; external 'TestFlash.dll' ;
function flGetAvailableSpiPorts(var maxLen: Word;  ports: PChar;  trans: PChar; var count: Word): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetAvailableSpiPorts(var maxLen: Word;  ports: PChar;  trans: PChar; var count: Word): Integer; stdcall; external 'TestFlash.dll' ;
function flmConvertSpiPort( transIn: PChar;  transOut: PChar; var device: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flGetFirmwareIds( source: Byte; var loaderId: Cardinal;  loaderName: PChar; var stackId: Cardinal;  stackName: PChar;  maxNameLen: Word): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetDeviceFirmwareIds( device: Cardinal; var loaderId: Cardinal;  loaderName: PChar; var stackId: Cardinal;  stackName: PChar;  maxNameLen: Word): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetFileFirmwareIds(var loaderId: Cardinal;  loaderName: PChar; var stackId: Cardinal;  stackName: PChar;  maxNameLen: Word): Integer; stdcall; external 'TestFlash.dll' ;
function flVerify(): Integer; stdcall; external 'TestFlash.dll' ;
function flmVerifyBlock( deviceMask: Cardinal;  restartAfter: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flmVerifySpawn( deviceMask: Cardinal;  restartAfter: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flGetFlashInfo(var sectors: Word; var sizeMbits: Word; var manId: Cardinal; var devId: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flmGetDeviceFlashInfo( device: Cardinal; var sectors: Word; var sizeMbits: Word; var manId: Cardinal; var devId: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;
function flSetFlashType( aType: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function flmSetFlashType( deviceMask: Cardinal;  aType: Byte): Integer; stdcall; external 'TestFlash.dll' ;
function open_ps( port: Integer;  device: Integer): Integer; stdcall; external 'TestFlash.dll' ;
function close_ps(): Integer; stdcall; external 'TestFlash.dll' ;
procedure set_stores( store: Word); stdcall; external 'TestFlash.dll' ;
function write_ps( key: Word; var data: Word;  aLen: Word): Integer; stdcall; external 'TestFlash.dll' ;
function write_ps_verify( key: Word; var data: Word;  aLen: Word): Integer; stdcall; external 'TestFlash.dll' ;
function read_ps( key: Word; var data: Word;  maxlen: Word; var aLen: Word): Integer; stdcall; external 'TestFlash.dll' ;
function clear_ps( key: Word): Integer; stdcall; external 'TestFlash.dll' ;
function factory_set(): Integer; stdcall; external 'TestFlash.dll' ;
function e2_device( log2bytes: Word;  addrmask: Word): Integer; stdcall; external 'TestFlash.dll' ;
function get_firmware_id(var id: Integer; var nameBuffer: Word;  length: Cardinal): Integer; stdcall; external 'TestFlash.dll' ;

{ DEPRECATED FUNCTIONS }

function init_flash( port: Integer;  xtal: Integer;  delays: Integer;  transport: Integer): Integer; stdcall; external 'TestFlash.dll' name 'flInit';
function read_program_files( filename: PChar): Integer; stdcall; external 'TestFlash.dll' name 'flReadProgramFiles';
function program_flash_block(): Integer; stdcall; external 'TestFlash.dll' name 'flProgramBlock';
function erase_flash(): Integer; stdcall; external 'TestFlash.dll' name 'flErase';
function gang_program_flash_block( deviceMask: Word;  eraseFirst: Byte;  restartAfter: Byte;  skipUnused: Byte): Integer; stdcall; external 'TestFlash.dll' name 'flGangProgramBlock';
function get_bit_error_field(): Word; stdcall; external 'TestFlash.dll' name 'flGetBitErrorField';
function program_flash_spawn(): Integer; stdcall; external 'TestFlash.dll' name 'flProgramSpawn';
function gang_program_flash_spawn( deviceMask: Word;  eraseFirst: Byte;  restartAfter: Byte;  skipUnused: Byte): Integer; stdcall; external 'TestFlash.dll' name 'flGangProgramSpawn';
function get_spawned_progress(): Integer; stdcall; external 'TestFlash.dll' name 'flGetProgress';
function get_spawned_error(): Integer; stdcall; external 'TestFlash.dll' name 'flGetLastError';
function reset_and_start(): Integer; stdcall; external 'TestFlash.dll' name 'flResetAndStart';
procedure close_flash(); stdcall; external 'TestFlash.dll' name 'flClose';
function get_version( versionStr: PChar): Integer; stdcall; external 'TestFlash.dll' name 'flGetVersion';

implementation

end.
